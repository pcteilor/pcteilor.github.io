{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\sites\\\\rpgcompendium\\\\src\\\\pages\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport { Content, Row, Col } from '../modules/Grid';\nimport { Card } from '../modules/Card';\nimport monsters from '../monstersdata.json';\n\nfunction Search(props) {\n  _s();\n\n  document.title = `Busca | Monster Compendium `;\n  const searchTerm = JSON.parse(localStorage.getItem('busca'));\n  const [searchResults, setSearchResults] = useState([]);\n  const results = monsters.filter(value => value.name.toLowerCase().includes(searchTerm.toLowerCase()) || value.type.toLowerCase().includes(searchTerm.toLowerCase()) || value.size.toLowerCase().includes(searchTerm.toLowerCase()));\n  console.log('results');\n  console.log(results);\n  const cardRender = results.map(monster => /*#__PURE__*/_jsxDEV(Col, {\n    col: \"col-md-3\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      id: monster.id,\n      name: monster.name,\n      type: monster.type,\n      size: monster.size,\n      cr: monster.cr,\n      aligment: monster.aligment,\n      imgSrc: monster.imgSrc\n    }, monster.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, monster.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      container: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"monster-quote\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"monster-name\",\n            style: {\n              fontSize: '1.4rem'\n            },\n            children: results.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 44\n          }, this), \" resultados por\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"monster-name\",\n            style: {\n              fontSize: '1.4rem'\n            },\n            children: [\" \", searchTerm, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 141\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), cardRender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"yyVBuiEzaYu8nxmfiuyN+Jj3pbw=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/PC/Documents/sites/rpgcompendium/src/pages/Search.js"],"names":["React","useEffect","useState","Content","Row","Col","Card","monsters","Search","props","document","title","searchTerm","JSON","parse","localStorage","getItem","searchResults","setSearchResults","results","filter","value","name","toLowerCase","includes","type","size","console","log","cardRender","map","monster","id","cr","aligment","imgSrc","height","fontSize","length"],"mappings":";;;;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,OAAT,EAAkBC,GAAlB,EAAuBC,GAAvB,QAAkC,iBAAlC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAIA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAAA;;AACpBC,EAAAA,QAAQ,CAACC,KAAT,GAAkB,6BAAlB;AAEA,QAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAnB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMiB,OAAO,GAAGZ,QAAQ,CAACa,MAAT,CAAgBC,KAAK,IACnCA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCZ,UAAU,CAACW,WAAX,EAAlC,KAA+DF,KAAK,CAACI,IAAN,CAAWF,WAAX,GAAyBC,QAAzB,CAAkCZ,UAAU,CAACW,WAAX,EAAlC,CAA/D,IAA8HF,KAAK,CAACK,IAAN,CAAWH,WAAX,GAAyBC,QAAzB,CAAkCZ,UAAU,CAACW,WAAX,EAAlC,CADhH,CAAhB;AAIEI,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACD,QAAMU,UAAU,GAAGV,OAAO,CAACW,GAAR,CACfC,OAAD,iBACA,QAAC,GAAD;AAAK,IAAA,GAAG,EAAC,UAAT;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,EAAE,EAAEA,OAAO,CAACC,EADd;AAGE,MAAA,IAAI,EAAED,OAAO,CAACT,IAHhB;AAIE,MAAA,IAAI,EAAES,OAAO,CAACN,IAJhB;AAKE,MAAA,IAAI,EAAEM,OAAO,CAACL,IALhB;AAME,MAAA,EAAE,EAAEK,OAAO,CAACE,EANd;AAOE,MAAA,QAAQ,EAAEF,OAAO,CAACG,QAPpB;AAQE,MAAA,MAAM,EAAEH,OAAO,CAACI;AARlB,OAEOJ,OAAO,CAACC,EAFf;AAAA;AAAA;AAAA;AAAA;AADF,KAAyBD,OAAO,CAACC,EAAjC;AAAA;AAAA;AAAA;AAAA,UAFgB,CAAnB;AAgBC,sBAEI;AAAA,4BAEE;AAAK,MAAA,KAAK,EAAE;AAACI,QAAAA,MAAM,EAAE;AAAT;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,6BACE,QAAC,GAAD;AAAA,gCAEE;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA,kCAA6B;AAAM,YAAA,SAAS,EAAC,cAAhB;AAA+B,YAAA,KAAK,EAAE;AAACC,cAAAA,QAAQ,EAAC;AAAV,aAAtC;AAAA,sBAA4DlB,OAAO,CAACmB;AAApE;AAAA;AAAA;AAAA;AAAA,kBAA7B,kCAA8H;AAAM,YAAA,SAAS,EAAC,cAAhB;AAA+B,YAAA,KAAK,EAAE;AAACD,cAAAA,QAAQ,EAAC;AAAV,aAAtC;AAAA,4BAA6DzB,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA9H;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAIGiB,UAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkBH;;GA7CQrB,M;;KAAAA,M;AA+CT,eAAeA,MAAf","sourcesContent":["import { React, useEffect, useState } from 'react'\r\n\r\nimport { Content, Row, Col } from '../modules/Grid'\r\nimport { Card } from '../modules/Card'\r\nimport monsters from '../monstersdata.json'\r\n\r\n\r\n\r\nfunction Search(props){\r\n  document.title = `Busca | Monster Compendium `;\r\n  \r\n  const searchTerm = JSON.parse(localStorage.getItem('busca'))\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const results = monsters.filter(value =>\r\n    value.name.toLowerCase().includes(searchTerm.toLowerCase()) || value.type.toLowerCase().includes(searchTerm.toLowerCase()) || value.size.toLowerCase().includes(searchTerm.toLowerCase())\r\n );\r\n\r\n    console.log('results')\r\n    console.log(results)\r\n   const cardRender = results.map(\r\n      (monster)=>\r\n      <Col col='col-md-3' key={monster.id}>\r\n        <Card \r\n          id={monster.id}\r\n          key={monster.id}\r\n          name={monster.name} \r\n          type={monster.type} \r\n          size={monster.size} \r\n          cr={monster.cr} \r\n          aligment={monster.aligment} \r\n          imgSrc={monster.imgSrc} \r\n        /> \r\n      </Col>\r\n    )\r\n\r\n    return (\r\n        \r\n        <div>\r\n          \r\n          <div style={{height: 20}}></div>\r\n    \r\n          <Content container='container'>\r\n            <Row>\r\n    \r\n              <p className='monster-quote'><span className='monster-name' style={{fontSize:'1.4rem'}}>{results.length}</span> resultados por<span className='monster-name' style={{fontSize:'1.4rem'}}> {searchTerm} </span></p>\r\n              \r\n              {cardRender}\r\n\r\n    \r\n            </Row>\r\n          </Content>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Search ;"]},"metadata":{},"sourceType":"module"}